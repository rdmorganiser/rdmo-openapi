openapi: 3.0.1
servers:
  - url: 'http://localhost:8000/api/v1'
  - url: 'http://localhost:8280/api/v1'
info:
  description: ''
  version: 1.0.0
  title: RDMO JSON API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /accounts/users/:
    get:
      tags:
        - accounts
      summary: List users
      parameters:
        - name: username
          in: query
          description: Filter by username.
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: Filter by email.
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: Filter by project ID.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        '403':
          description: Forbidden
  '/accounts/users/{id}':
    get:
      tags:
        - accounts
      summary: Retrieve user
      parameters:
        - name: id
          in: path
          description: The ID of the user.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/user'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /conditions/conditions/:
    get:
      tags:
        - conditions
      summary: List conditions
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
        - name: source
          in: query
          description: Filter by source attribute ID.
          required: false
          schema:
            type: integer
        - name: relation
          in: query
          description: Filter by relation.
          required: false
          schema:
            type: integer
        - name: target_text
          in: query
          description: Filter by target text.
          required: false
          schema:
            type: string
        - name: target_option
          in: query
          description: Filter by target option ID.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/condition'
        '403':
          description: Forbidden
  '/conditions/conditions/{id}':
    get:
      tags:
        - conditions
      summary: Retrieve conditions
      parameters:
        - name: id
          in: path
          description: The ID of the condition.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/condition'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /domain/entities/:
    get:
      tags:
        - domain
      summary: List entities
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: Filter by path.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
        - name: parent
          in: query
          description: Filter by parent entity ID.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entity'
        '403':
          description: Forbidden
  '/domain/entities/{id}':
    get:
      tags:
        - domain
      summary: Retrieve entity
      parameters:
        - name: id
          in: path
          description: The ID of the entity.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/entity'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /domain/attributes/:
    get:
      tags:
        - domain
      summary: List attributes
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: Filter by path.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
        - name: parent
          in: query
          description: Filter by parent entity ID.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/attribute'
        '403':
          description: Forbidden
  '/domain/attribute/{id}':
    get:
      tags:
        - domain
      summary: Retrieve attribute
      parameters:
        - name: id
          in: path
          description: The ID of the attribute.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/attribute'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /options/optionset/:
    get:
      tags:
        - options
      summary: List option sets
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/optionset'
        '403':
          description: Forbidden
  '/options/optionset/{id}':
    get:
      tags:
        - options
      summary: Retrieve option set
      parameters:
        - name: id
          in: path
          description: The ID of the option set.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/optionset'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /options/options/:
    get:
      tags:
        - options
      summary: List options
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: Filter by path.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
        - name: optionset
          in: query
          description: Filter by parent optionset ID.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/option'
        '403':
          description: Forbidden
  '/options/options/{id}':
    get:
      tags:
        - options
      summary: Retrieve option
      parameters:
        - name: id
          in: path
          description: The ID of the options.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/option'
        '403':
          description: Forbidden
        '404':
          description: Not found
  '/projects/projects/':
    get:
      tags:
        - projects
      summary: List projects
      parameters:
        - name: id
          in: path
          description: The ID of the options.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                  type: array
                  items:
                      $ref: '#/components/schemas/project'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /questions/catalogs/:
    get:
      tags:
        - questions
      summary: List catalogs
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/catalog'
        '403':
          description: Forbidden
  '/questions/catalogs/{id}':
    get:
      tags:
        - questions
      summary: Retrieve catalog
      parameters:
        - name: id
          in: path
          description: The ID of the catalog.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/catalog'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /questions/sections/:
    get:
      tags:
        - questions
      summary: List sections
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: Filter by path.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
        - name: catalog
          in: query
          description: Filter by parent catalog ID.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/section'
        '403':
          description: Forbidden
  '/questions/sections/{id}':
    get:
      tags:
        - questions
      summary: Retrieve section
      parameters:
        - name: id
          in: path
          description: The ID of the section.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/section'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /questions/subsections/:
    get:
      tags:
        - questions
      summary: List subsection
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: Filter by path.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
        - name: section
          in: query
          description: Filter by parent section ID.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subsection'
        '403':
          description: Forbidden
  '/questions/subsections/{id}':
    get:
      tags:
        - questions
      summary: Retrieve subsection
      parameters:
        - name: id
          in: path
          description: The ID of the subsection.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/subsection'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /questions/questionset/:
    get:
      tags:
        - questions
      summary: List questionsets
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: Filter by path.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
        - name: subsection
          in: query
          description: Filter by parent subsection ID.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/questionset'
        '403':
          description: Forbidden
  '/questions/questionsets/{id}':
    get:
      tags:
        - questions
      summary: Retrieve questionset
      parameters:
        - name: id
          in: path
          description: The ID of the questionset.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/questionset'
        '403':
          description: Forbidden
        '404':
          description: Not found
  /questions/questions/:
    get:
      tags:
        - questions
      summary: List questions
      parameters:
        - name: uri
          in: query
          description: Filter by URI.
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: Filter by path.
          required: false
          schema:
            type: string
        - name: key
          in: query
          description: Filter by key.
          required: false
          schema:
            type: string
        - name: subsection
          in: query
          description: Filter by parent section ID.
          required: false
          schema:
            type: integer
        - name: parent
          in: query
          description: Filter by parent question set ID.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/question'
        '403':
          description: Forbidden
  '/questions/questions/{id}':
    get:
      tags:
        - questions
      summary: Retrieve question
      parameters:
        - name: id
          in: path
          description: The ID of the question.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/question'
        '403':
          description: Forbidden
        '404':
          description: Not found
components:
  schemas:
    user:
      type: object
      properties:
        id:
          description: The ID of the user.
          type: integer
        username:
          description: The username of the user.
          type: string
        first_name:
          description: The first name of the user.
          type: string
        last_name:
          description: The last name of the user.
          type: string
        email:
          description: The email of the user.
          type: string
    condition:
      type: object
      properties:
        id:
          description: The ID of this condition.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this condition.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this condition.
          type: string
        key:
          description: The internal identifier of this condition.
          type: string
        comment:
          description: Additional internal information about this condition.
          type: string
        source:
          description: The Attribute this condition is evaluating.
          type: string
          format: url
        relation:
          description: The Relation this condition is using.
          type: string
        target_text:
          description: >-
            If using a regular attibute, the text value this condition is
            checking against.
          type: string
        target_option:
          description: >-
            If using an options attribute, the option this condition is checking
            against.
          type: string
          format: url
    entity:
      type: object
      properties:
        id:
          description: The ID of this entity.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this entity.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this entity.
          type: string
        path:
          description: The path part of the URI of this entity.
          type: string
        key:
          description: The internal identifier of this entity.
          type: string
        comment:
          description: Additional internal information about this entity.
          type: string
        is_collection:
          description: Designates whether this entity is a collection.
          type: boolean
        conditions:
          description: List of conditions evaluated for this entity.
          type: array
          items:
            type: string
            format: url
        parent:
          description: Parent entity in the domain model.
          type: string
          format: url
        children:
          description: List of child entities/attributes in the domain model.
          type: array
          items:
            type: string
            format: url
    attribute:
      type: object
      properties:
        id:
          description: The ID of this attribute.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this attribute.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this attribute.
          type: string
        path:
          description: The path part of the URI of this attribute.
          type: string
        key:
          description: The internal identifier of this attribute.
          type: string
        comment:
          description: Additional internal information about this attribute.
          type: string
        value_type:
          description: Type of value for this attribute.
          type: string
        unit:
          description: Unit for this attribute.
          type: string
        is_collection:
          description: Designates whether this attribute is a collection.
          type: boolean
        range:
          $ref: '#/components/schemas/range'
        optionsets:
          description: List of optionsets used for this attribute.
          type: array
          items:
            type: string
            format: url
        conditions:
          description: List of conditions evaluated for this attribute.
          type: array
          items:
            type: string
            format: url
        parent:
          description: Parent entity in the domain model.
          type: string
          format: url
    range:
      type: object
      properties:
        id:
          description: The ID of this attribute.
          type: integer
        minimum:
          description: Minimal value for this attribute.
          type: number
          format: float
        maximum:
          description: Maximum value for this attribute.
          type: number
          format: float
        step:
          description: Step in which this attribute can be incremented/decremented.
          type: number
          format: float
    optionset:
      type: object
      properties:
        id:
          description: The ID ot this option set.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this option set.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this option set.
          type: string
        key:
          description: The internal identifier of this option set.
          type: string
        comment:
          description: Additional internal information about this option set.
          type: string
        order:
          description: The position of this option set in lists.
          type: integer
        conditions:
          type: array
          description: List of conditions evaluated for this option set.
          items:
            type: string
            format: url
        options:
          type: array
          description: List of options in this optionset.
          items:
            type: string
            format: url
    option:
      type: object
      properties:
        id:
          description: The ID ot this option.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this option.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this option.
          type: string
        key:
          description: The internal identifier of this option.
          type: string
        comment:
          description: Additional internal information about this option.
          type: string
        order:
          description: The position of this option in lists.
          type: integer
        text_en:
          description: The English text displayed for this option.
          type: string
        text_de:
          description: The German text displayed for this option.
          type: string
        additional_input:
          description: Designates whether an additional input is possible for this option.
          type: boolean
        optionset:
          description: The option set this option belongs to.
          type: string
          format: url
    project:
      type: object
      properties:
        id:
          description: The project ID.
          type: integer
        title:
          description: The project's title
          type: string
        description:
          description: The project's description
          type: string
        catalog:
          description: URL to the question catalog of the project
          type: string
        snapshots:
          description: Snapshot of a project
          type: array
          items:
            type: string
            format: url
        members:
          $ref: '#/components/schemas/members'
    members:
      type: object
      properties:
        author:
            description: Authors of a project
            type: array
            items:
              type: string
              format: url
        manager:
            description: Managers of a project
            type: array
            items:
              type: string
              format: url
        guest:
            description: Guest users of a project
            type: array
            items:
              type: string
              format: url
        owner:
            description: Owners of a project
            type: array
            items:
              type: string
              format: url
    catalog:
      type: object
      properties:
        id:
          description: The ID ot this catalog.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this catalog.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this catalog.
          type: string
        key:
          description: The internal identifier of this catalog.
          type: string
        comment:
          description: Additional internal information about this catalog.
          type: string
        order:
          description: The position of this catalog in lists.
          type: integer
        title_en:
          description: The English title displayed for this catalog.
          type: string
        title_de:
          description: The German title displayed for this catalog.
          type: string
        sections:
          type: array
          description: List of sections in this catalog.
          items:
            type: string
            format: url
    section:
      type: object
      properties:
        id:
          description: The ID ot this section.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this section.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this section.
          type: string
        key:
          description: The internal identifier of this section.
          type: string
        comment:
          description: Additional internal information about this section.
          type: string
        catalog:
          description: The catalog this section belongs to.
          type: string
          format: url
        order:
          description: The position of this section in lists.
          type: integer
        title_en:
          description: The English title displayed for this section.
          type: string
        title_de:
          description: The German title displayed for this section.
          type: string
        sections:
          type: array
          description: List of subsections in this section.
          items:
            type: string
            format: url
    subsection:
      type: object
      properties:
        id:
          description: The ID ot this subsection.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this subsection.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this subsection.
          type: string
        key:
          description: The internal identifier of this subsection.
          type: string
        comment:
          description: Additional internal information about this subsection.
          type: string
        catalog:
          description: The section this subsection belongs to.
          type: string
          format: url
        order:
          description: The position of this subsection in lists.
          type: integer
        title_en:
          description: The English title displayed for this subsection.
          type: string
        title_de:
          description: The German title displayed for this subsection.
          type: string
        question_entities:
          type: array
          description: List of question entities in this subsection.
          items:
            type: string
            format: url
    questionset:
      type: object
      properties:
        id:
          description: The ID ot this question set.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this question set.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this question set.
          type: string
        key:
          description: The internal identifier of this question set.
          type: string
        comment:
          description: Additional internal information about this question set.
          type: string
        subsection:
          description: The question set this question set belongs to.
          type: string
          format: url
        attribute_entity:
          description: The entity this question set belongs to.
        order:
          description: The position of this question set in lists.
          type: integer
        help_en:
          description: The English title displayed for this question set.
          type: string
        help_de:
          description: The German title displayed for this question set.
          type: string
        questions:
          type: array
          description: List of questions in this question set.
          items:
            type: string
            format: url
    question:
      type: object
      properties:
        id:
          description: The ID ot this question.
          type: integer
        uri:
          description: The Uniform Resource Identifier of this question.
          type: string
          format: uri
        uri_prefix:
          description: The prefix for the URI of this question.
          type: string
        key:
          description: The internal identifier of this question.
          type: string
        comment:
          description: Additional internal information about this question.
          type: string
        subsection:
          description: The subsection this question set belongs to.
          type: string
          format: url
        attribute_entity:
          description: The attribute this question belongs to.
          type: string
          format: url
        order:
          description: The position of this question in lists.
          type: integer
        help_en:
          description: The English help text displayed for this question.
          type: string
        help_de:
          description: The German help text displayed for this question.
          type: string
        text_en:
          description: The English text displayed for this question.
          type: string
        text_de:
          description: The German text displayed for this question.
          type: string
        widget_type:
          description: Type of widget for this question.
          type: string
